{"version":3,"file":"static/js/562.cda6788d.chunk.js","mappings":"sMA4GA,UA/FA,WAEI,IAAMA,GAAWC,EAAAA,EAAAA,MAEjB,GAA2BC,EAAAA,EAAAA,UAAS,IAApC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAEMC,GAASC,EAAAA,EAAAA,MA8Df,OA5DAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAQC,aAAaC,QAAQ,SAC/BF,EAEqB,WADLG,EAAAA,EAAAA,GAAWH,GACfI,KACRR,GAAW,GAEXR,EAAS,KAGbA,EAAS,OAEd,CAACA,KAEJW,EAAAA,EAAAA,YAAU,WACNM,IAAAA,KAAW,+BAAgC,CAAEC,OAAQT,EAAOS,SAAUC,MAAK,SAAAC,GACvE,IAAMC,EAAWD,EAAIE,KAAK,GAC1BlB,EAASiB,EAASlB,QAClBG,EAAQe,EAAShB,WAEtB,CAACI,EAAOS,SAwCPX,GAEI,iBAAKgB,UAAU,YAAf,WACI,gBAAKA,UAAU,OAAf,UACI,eAAIA,UAAU,mBAAd,gCAEJ,iBAAKA,UAAU,MAAf,WACI,iBAAKA,UAAU,OAAf,WACI,kBAAOA,UAAU,aAAaC,QAAQ,QAAtC,qBACA,kBAAOD,UAAU,eAAeE,KAAK,OAAOC,MAAOvB,EAAQwB,SAAU,SAACC,GAAQxB,EAASwB,EAAEC,OAAOH,cAGpG,iBAAKH,UAAU,OAAf,WACI,kBAAOA,UAAU,aAAaC,QAAQ,OAAtC,0BACA,kBAAOD,UAAU,eAAeE,KAAK,OAAOC,MAAOrB,EAAMsB,SAAU,SAACC,GAAQtB,EAAQsB,EAAEC,OAAOH,cAEjG,mBAAQI,QArDxB,WACI,IAAMC,EAAa,CACf5B,OAAAA,EACAE,KAAAA,EACAa,OAAQT,EAAOS,QAGnBc,IAAAA,KAAU,CACNC,MAAO,gBACPC,KAAM,oCACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBACpBpB,MAAK,SAACqB,GACDA,EAAOC,aACPxB,IAAAA,KAAW,0BAA2Bc,GACjCZ,MAAK,SAAAC,GACFY,IAAAA,KAAU,CACNC,MAAO,oBACPE,KAAM,UACND,KAAM,2CACPf,MAAK,SAACqB,GACLxC,EAAS,eAEd0C,OAAM,SAACC,GACNX,IAAAA,KAAU,CACNC,MAAO,QACPC,KAAM,4CACNC,KAAM,iBAuBaZ,UAAU,kBAArC,+BAKL","sources":["pages/Blog/blogEdit.tsx"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport Swal from 'sweetalert2'\nimport jwt_decode from \"jwt-decode\";\n\ninterface DecodedToken {\n    _id: string;\n    role: string;\n    iat: number;\n    exp: number;\n}\n\nfunction BlogEdit() {\n\n    const navigate = useNavigate();\n    //Hooks\n    const [titlie, setTilte] = useState('')\n    const [plot, setPlot] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false);\n\n    const params = useParams();\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            const decoded = jwt_decode(token) as DecodedToken;\n            if (decoded.role === \"admin\") {\n                setIsAdmin(true);\n            } else {\n                navigate(\"/\");\n            }\n        } else {\n            navigate(\"/\");\n        }\n    }, [navigate]);\n\n    useEffect(() => {\n        axios.post('/api/esquema/obtenerdatablog', { idblog: params.idblog }).then(res => {\n            const dataBlog = res.data[0]\n            setTilte(dataBlog.titlie)\n            setPlot(dataBlog.plot)\n        })\n    }, [params.idblog])\n\n    //Actualizar blog\n    function editBlog() {\n        const updateBlog = {\n            titlie,\n            plot,\n            idblog: params.idblog\n        }\n\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, update it!'\n        }).then((result) => {\n            if (result.isConfirmed) {\n                axios.post('/api/esquema/updateBlog', updateBlog)\n                    .then(res => {\n                        Swal.fire({\n                            title: '¡Updated blog!',\n                            icon: 'success',\n                            text: 'The blog has been successfully updated'\n                        }).then((result) => {\n                            navigate(\"/blog\");\n                        });\n                    }).catch((err) => {\n                        Swal.fire({\n                            title: \"Error\",\n                            text: \"An error occurred while adding your file.\",\n                            icon: \"error\",\n                        });\n                    });\n            }\n        });\n    }\n\n    if (isAdmin) {\n        return (\n            <div className=\"container\">\n                <div className=\"row \">\n                    <h1 className=\"mt-4 text-center\"> Añadir Blog</h1>\n                </div>\n                <div className=\"row\">\n                    <div className=\"mb-3\">\n                        <label className=\"form-label\" htmlFor=\"title\">Titulo</label>\n                        <input className=\"form-control\" type=\"text\" value={titlie} onChange={(e) => { setTilte(e.target.value) }} />\n                    </div>\n\n                    <div className=\"mb-3\">\n                        <label className=\"form-label\" htmlFor=\"plot\">Descripcion</label>\n                        <input className=\"form-control\" type=\"text\" value={plot} onChange={(e) => { setPlot(e.target.value) }} />\n                    </div>\n                    <button onClick={editBlog} className=\"btn btn-success\">Editar Blog</button>\n                </div>\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default BlogEdit;\n"],"names":["navigate","useNavigate","useState","titlie","setTilte","plot","setPlot","isAdmin","setIsAdmin","params","useParams","useEffect","token","localStorage","getItem","jwt_decode","role","axios","idblog","then","res","dataBlog","data","className","htmlFor","type","value","onChange","e","target","onClick","updateBlog","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","catch","err"],"sourceRoot":""}